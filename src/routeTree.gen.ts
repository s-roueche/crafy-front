/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as UserIdImport } from './routes/$userId'
import { Route as IndexImport } from './routes/index'
import { Route as ReportsUserIdImport } from './routes/reports.$userId'
import { Route as CompaniesUserIdImport } from './routes/companies.$userId'
import { Route as ReportDetailUserIdReportIdImport } from './routes/report-detail.$userId.$reportId'
import { Route as CompaniesUserIdAddImport } from './routes/companies.$userId.add'

// Create/Update Routes

const UserIdRoute = UserIdImport.update({
  id: '/$userId',
  path: '/$userId',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ReportsUserIdRoute = ReportsUserIdImport.update({
  id: '/reports/$userId',
  path: '/reports/$userId',
  getParentRoute: () => rootRoute,
} as any)

const CompaniesUserIdRoute = CompaniesUserIdImport.update({
  id: '/companies/$userId',
  path: '/companies/$userId',
  getParentRoute: () => rootRoute,
} as any)

const ReportDetailUserIdReportIdRoute = ReportDetailUserIdReportIdImport.update(
  {
    id: '/report-detail/$userId/$reportId',
    path: '/report-detail/$userId/$reportId',
    getParentRoute: () => rootRoute,
  } as any,
)

const CompaniesUserIdAddRoute = CompaniesUserIdAddImport.update({
  id: '/add',
  path: '/add',
  getParentRoute: () => CompaniesUserIdRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/$userId': {
      id: '/$userId'
      path: '/$userId'
      fullPath: '/$userId'
      preLoaderRoute: typeof UserIdImport
      parentRoute: typeof rootRoute
    }
    '/companies/$userId': {
      id: '/companies/$userId'
      path: '/companies/$userId'
      fullPath: '/companies/$userId'
      preLoaderRoute: typeof CompaniesUserIdImport
      parentRoute: typeof rootRoute
    }
    '/reports/$userId': {
      id: '/reports/$userId'
      path: '/reports/$userId'
      fullPath: '/reports/$userId'
      preLoaderRoute: typeof ReportsUserIdImport
      parentRoute: typeof rootRoute
    }
    '/companies/$userId/add': {
      id: '/companies/$userId/add'
      path: '/add'
      fullPath: '/companies/$userId/add'
      preLoaderRoute: typeof CompaniesUserIdAddImport
      parentRoute: typeof CompaniesUserIdImport
    }
    '/report-detail/$userId/$reportId': {
      id: '/report-detail/$userId/$reportId'
      path: '/report-detail/$userId/$reportId'
      fullPath: '/report-detail/$userId/$reportId'
      preLoaderRoute: typeof ReportDetailUserIdReportIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface CompaniesUserIdRouteChildren {
  CompaniesUserIdAddRoute: typeof CompaniesUserIdAddRoute
}

const CompaniesUserIdRouteChildren: CompaniesUserIdRouteChildren = {
  CompaniesUserIdAddRoute: CompaniesUserIdAddRoute,
}

const CompaniesUserIdRouteWithChildren = CompaniesUserIdRoute._addFileChildren(
  CompaniesUserIdRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/$userId': typeof UserIdRoute
  '/companies/$userId': typeof CompaniesUserIdRouteWithChildren
  '/reports/$userId': typeof ReportsUserIdRoute
  '/companies/$userId/add': typeof CompaniesUserIdAddRoute
  '/report-detail/$userId/$reportId': typeof ReportDetailUserIdReportIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/$userId': typeof UserIdRoute
  '/companies/$userId': typeof CompaniesUserIdRouteWithChildren
  '/reports/$userId': typeof ReportsUserIdRoute
  '/companies/$userId/add': typeof CompaniesUserIdAddRoute
  '/report-detail/$userId/$reportId': typeof ReportDetailUserIdReportIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/$userId': typeof UserIdRoute
  '/companies/$userId': typeof CompaniesUserIdRouteWithChildren
  '/reports/$userId': typeof ReportsUserIdRoute
  '/companies/$userId/add': typeof CompaniesUserIdAddRoute
  '/report-detail/$userId/$reportId': typeof ReportDetailUserIdReportIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/$userId'
    | '/companies/$userId'
    | '/reports/$userId'
    | '/companies/$userId/add'
    | '/report-detail/$userId/$reportId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/$userId'
    | '/companies/$userId'
    | '/reports/$userId'
    | '/companies/$userId/add'
    | '/report-detail/$userId/$reportId'
  id:
    | '__root__'
    | '/'
    | '/$userId'
    | '/companies/$userId'
    | '/reports/$userId'
    | '/companies/$userId/add'
    | '/report-detail/$userId/$reportId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  UserIdRoute: typeof UserIdRoute
  CompaniesUserIdRoute: typeof CompaniesUserIdRouteWithChildren
  ReportsUserIdRoute: typeof ReportsUserIdRoute
  ReportDetailUserIdReportIdRoute: typeof ReportDetailUserIdReportIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  UserIdRoute: UserIdRoute,
  CompaniesUserIdRoute: CompaniesUserIdRouteWithChildren,
  ReportsUserIdRoute: ReportsUserIdRoute,
  ReportDetailUserIdReportIdRoute: ReportDetailUserIdReportIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/$userId",
        "/companies/$userId",
        "/reports/$userId",
        "/report-detail/$userId/$reportId"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/$userId": {
      "filePath": "$userId.tsx"
    },
    "/companies/$userId": {
      "filePath": "companies.$userId.tsx",
      "children": [
        "/companies/$userId/add"
      ]
    },
    "/reports/$userId": {
      "filePath": "reports.$userId.tsx"
    },
    "/companies/$userId/add": {
      "filePath": "companies.$userId.add.tsx",
      "parent": "/companies/$userId"
    },
    "/report-detail/$userId/$reportId": {
      "filePath": "report-detail.$userId.$reportId.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
